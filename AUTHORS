Graham Ross <tektronix!tekmdp!grahamr>, Context, Inc.
	original author

????
	modified to provide hints for unsupported types
	added argument lists for functions
	added 'explain cast' grammar
	added #ifdef for 'create program' feature

David Wolverton <david_wolverton@att.com>
	conversion to ANSI C
	added typedef support
	removed noalias

Tony Hansen <tony@attmail.com>, <hansen@pegasus.att.com>
	merged D. Wolverton's ANSI C version w/ ????'s version
	added function prototypes
	added C++ declarations
	made type combination checking table driven
	added checks for void variable combinations
	made 'create program' feature a runtime option
	added file parsing as well as just stdin
	added help message at beginning
	added prompts when on a TTY or in interactive mode
	added getopt() usage
	added -a, -r, -p, -c, -d, -D, -V, -i and -+ options
	delinted
	added #defines for those without getopt or void
	added 'set options' command
	added 'quit/exit' command
	added synonyms

Merlyn LeRoy <merlyn@rose3.rosemount.com>
	added extern, register, static
	added links to explain, cast, declare
	separately developed ANSI C support

Alexander Dupuy <dupuy@smarts.com>, <dupuy@cs.columbia.edu>
	modified type crosscheck to warn about void/signed in ritchie, preansi
	#undef yywrap so that flex can be used
	better semantic checking on use of C++ references
	support const/volatile function member pointers

Tony Hansen <tony@attmail.com>, <hansen@pegasus.att.com>
	merged versions from LeRoy
	added tmpfile() support
	allow more parts to be missing during explanations
	fixed some memory leak problems pointed out by the "purify" program
	add support for ...
	now a command line argument may have more text than just the keyword

Dave Conrad <conrad@detroit.freenet.org>
	added GNU readline() support
	added dotmpfile_from_string() to support readline()
	outdented C help text to prevent line from wrapping
	minor tweaking of makefile && mv makefile Makefile
	took out interactive and nointeractive commands when
		compiled with readline support
	added prompt and noprompt commands, -q option

Peter Ammon <cdecl@ridiculousfish.com>
	added Apple's "blocks"

Paul J. Lucas <paul@lucasmail.org>
	converted to C99
	converted to GNU Autotools build
	added GNU-style test suite and many more tests
	added more semantic checks
	added long options
	added multi-line input
	now distinguishing among K&R C, C89, C95, C99, C11, C18, C++98, C++03,
		C++11, C++14, C++17, and C++20
	now using a proper abstract syntax tree data structure
	added _Atomic, bool, char16_t, char32_t, _Complex, _Imaginary,
		noreturn, restrict, thread_local, wchar_t
	added inline functions and variables
	added register and variadic function arguments
	added typedef, using, define, and show commands
	added C99 static, type-qualified, and variable length array
		function arguments
	added C99 standard types, e.g., int8_t, atomic_int, etc.
	added C++ constructors & destructors, namespaces & scoped names, and
		overloaded operators
	added C++11 auto, constexpr, enum class, function trailing return-type
		syntax, mutable, new-style casts, noexcept, ref-qualifiers,
		rvalue references, and user-defined literals, throw()
	added C++11 and later attribute specifiers
	added C++20 char8_t and consteval
	independently added typedef declarations
	added final, friend, const, override, volatile, virtual,
		and pure virtual C++ member function declarations
	made "returning" optional
	added binary, octal, and hexadecimal array sizes
	added digraph & trigraph support
	added better warning and error messages
	now ignoring C /*...*/ and C++ // comments in lexer
	now treating cdecl keywords in declarations as ordinary names
	revamped the manual page
