/*
**      cdecl -- C gibberish translator
**      src/lexer.h
**
**      Paul J. Lucas
*/

#ifndef cdecl_lexer_H
#define cdecl_lexer_H

// local
#include "config.h"                     /* must go first */

// standard
#include <stdbool.h>
#include <stddef.h>                     /* for size_t */

///////////////////////////////////////////////////////////////////////////////

// extern variables
extern bool         explaining;         // parsing "explain ..."?
extern char const  *my_text;            // guaranteed pointer of yytext

/**
 * Gets the lexer's current column number.
 *
 * @return Returns said column.
 */
size_t lexer_column( void );

/**
 * Resets the lexer to its initial state.
 *
 * @param hard_reset If \c true, does a "hard" reset that currently resets the
 * EOF flag also.
 */
void lexer_reset( bool hard_reset );

/**
 * Gets the next token.
 *
 * @return Returns the number of the current token or 0 if end-of-file.
 *
 * @note The code for this function is generated by flex and called by
 * yyparse() generated by bison.
 */
int yylex( void );

///////////////////////////////////////////////////////////////////////////////

#endif /* cdecl_lexer_H */
/* vim:set et sw=2 ts=2: */
