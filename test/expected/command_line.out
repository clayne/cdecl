cdecl> cast x into int
(int)x
c++decl> class C; show
class C;
c++decl> const cast p into pointer to class C
const_cast<C*>(p)
cdecl> declare x as int
int x;
cdecl> define Int as int; show
define Int as integer
c++decl> dynamic cast p into pointer to class C
dynamic_cast<C*>(p)
cdecl> enum E; show
typedef enum E E;
cdecl> explain int x
declare x as integer
cdecl> help
command:
  cast [<name>] {as|[in]to} <english>
  declare <name> [, <name>]* as <english> [<declare-option>]
  define <name> as <english>
  #define <name>[([<pp-param> [, <pp-param>]*])] <pp-token>*
  expand <name>[([<pp-token>* [, <pp-token>*]*])] <pp-token>*
  explain <gibberish> [, <gibberish>]*
  { help | ? } [command[s] | <command> | english | options]
  [#]include "<path>"
  set [<option> [= <value>] | options | <lang>]*
  show [<name>|[all] [predefined|user] [<glob>]] [[as] {english|typedef}]
  show {<name>|[predefined|user] macros}
  type[def] <gibberish> [, <gibberish>]*
  #undef <name>
  exit | q[uit]
declare-option:
  align[ed] [as|to] {<number> [bytes] | <english>}
  width <number> [bits]
gibberish: a C declaration, like "int x"; or a cast, like "(int)x"
glob: a <name> containing zero or more literal *
name: a C identifier
number: a binary, octal, decimal, or hexadecimal integer
pp-param: a macro parameter <name> or ...
pp-token: a preprocessor token
where: [] = 0 or 1; * = 0 or more; + = 1 or more; {} = one of; | = alternate
c++decl> inline namespace NS { using Int = int; }; show
inline namespace NS { using Int = int; }
c++decl> namespace NS { using Int = int; }; show
namespace NS { using Int = int; }
c++decl> reinterpret cast x as int
reinterpret_cast<int>(x)
cdecl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
    explicit-ecsu=su         (Not supported in C.)
  noexplicit-int
  nographs
  noinfer-command
    language=C23
  nopermissive-types
    prompt
    semicolon
  notrailing-return
    using                    (Not supported in C.)
    west-decl=bflo
cdecl> show predefined
typedef WORD ATOM;
typedef int BOOL;
typedef BYTE BOOLEAN;
typedef unsigned char BYTE;
typedef char CCHAR;
typedef char CHAR;
typedef DWORD COLORREF;
typedef struct _dirdesc DIR;
typedef unsigned long DWORD;
typedef unsigned DWORD32;
typedef unsigned long DWORD64;
typedef unsigned long DWORDLONG;
typedef ULONG_PTR DWORD_PTR;
typedef struct _iobuf FILE;
typedef float FLOAT;
typedef int HALF_PTR;
typedef PVOID HANDLE;
typedef HANDLE HBITMAP;
typedef HANDLE HBRUSH;
typedef HANDLE HCOLORSPACE;
typedef HANDLE HCONV;
typedef HANDLE HCONVLIST;
typedef HICON HCURSOR;
typedef HANDLE HDC;
typedef HANDLE HDDEDATA;
typedef HANDLE HDESK;
typedef HANDLE HDROP;
typedef HANDLE HDWP;
typedef HANDLE HENHMETAFILE;
typedef int HFILE;
typedef HANDLE HFONT;
typedef HANDLE HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef HANDLE HHOOK;
typedef HANDLE HICON;
typedef HANDLE HINSTANCE;
typedef HANDLE HKEY;
typedef HANDLE HKL;
typedef HANDLE HLOCAL;
typedef HANDLE HMENU;
typedef HANDLE HMETAFILE;
typedef HINSTANCE HMODULE;
typedef HANDLE HMONITOR;
typedef HANDLE HPALETTE;
typedef HANDLE HPEN;
typedef long HRESULT;
typedef HANDLE HRGN;
typedef HANDLE HRSRC;
typedef HANDLE HSZ;
typedef HANDLE HWINSTA;
typedef HANDLE HWND;
typedef int INT;
typedef short INT16;
typedef int INT32;
typedef long INT64;
typedef signed char INT8;
typedef __int64 INT_PTR;
typedef WORD LANGID;
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef DWORD LCID;
typedef DWORD LCTYPE;
typedef DWORD LGRPID;
typedef long LONG;
typedef int LONG32;
typedef __int64 LONG64;
typedef long long LONGLONG;
typedef __int64 LONG_PTR;
typedef BOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef CHAR *LPCHAR;
typedef COLORREF *LPCOLORREF;
typedef const CHAR *LPCSTR;
typedef LPCWSTR LPCTSTR;
typedef const void *LPCVOID;
typedef const WCHAR *LPCWSTR;
typedef DWORD *LPDWORD;
typedef HANDLE *LPHANDLE;
typedef int *LPINT;
typedef long *LPLONG;
typedef CHAR *LPSTR;
typedef LPWSTR LPTSTR;
typedef void *LPVOID;
typedef WORD *LPWORD;
typedef WCHAR *LPWSTR;
typedef LONG_PTR LRESULT;
typedef BOOL *PBOOL;
typedef BOOLEAN *PBOOLEAN;
typedef BYTE *PBYTE;
typedef CHAR *PCHAR;
typedef const CHAR *PCSTR;
typedef LPCWSTR PCTSTR;
typedef const WCHAR *PCWSTR;
typedef DWORD *PDWORD;
typedef DWORD32 *PDWORD32;
typedef DWORD64 *PDWORD64;
typedef DWORDLONG *PDWORDLONG;
typedef DWORD_PTR *PDWORD_PTR;
typedef FLOAT *PFLOAT;
typedef HALF_PTR *PHALF_PTR;
typedef HANDLE *PHANDLE;
typedef HKEY *PHKEY;
typedef INT *PINT;
typedef INT16 *PINT16;
typedef INT32 *PINT32;
typedef INT64 *PINT64;
typedef INT8 *PINT8;
typedef INT_PTR *PINT_PTR;
typedef PDWORD PLCID;
typedef LONG *PLONG;
typedef LONG32 *PLONG32;
typedef LONG64 *PLONG64;
typedef LONGLONG *PLONGLONG;
typedef LONG_PTR *PLONG_PTR;
typedef SHORT *PSHORT;
typedef SIZE_T *PSIZE_T;
typedef SSIZE_T *PSSIZE_T;
typedef CHAR *PSTR;
typedef TBYTE *PTBYTE;
typedef TCHAR *PTCHAR;
typedef LPWSTR PTSTR;
typedef UCHAR *PUCHAR;
typedef UHALF_PTR *PUHALF_PTR;
typedef UINT *PUINT;
typedef UINT16 *PUINT16;
typedef UINT32 *PUINT32;
typedef UINT64 *PUINT64;
typedef UINT8 *PUINT8;
typedef UINT_PTR *PUINT_PTR;
typedef ULONG *PULONG;
typedef ULONG32 *PULONG32;
typedef ULONG64 *PULONG64;
typedef ULONGLONG *PULONGLONG;
typedef ULONG_PTR *PULONG_PTR;
typedef USHORT *PUSHORT;
typedef void *PVOID;
typedef WCHAR *PWCHAR;
typedef WORD *PWORD;
typedef WCHAR *PWSTR;
typedef unsigned long long QWORD;
typedef HANDLE SC_HANDLE;
typedef LPVOID SC_LOCK;
typedef HANDLE SERVICE_STATUS_HANDLE;
typedef short SHORT;
typedef ULONG_PTR SIZE_T;
typedef LONG_PTR SSIZE_T;
typedef WCHAR TBYTE;
typedef WCHAR TCHAR;
typedef unsigned char UCHAR;
typedef unsigned UHALF_PTR;
typedef unsigned UINT;
typedef unsigned short UINT16;
typedef unsigned UINT32;
typedef unsigned long UINT64;
typedef unsigned char UINT8;
typedef unsigned long UINT_PTR;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef unsigned long ULONG;
typedef unsigned ULONG32;
typedef unsigned long ULONG64;
typedef unsigned long long ULONGLONG;
typedef unsigned long ULONG_PTR;
typedef struct UNICODE_STRING UNICODE_STRING;
typedef unsigned short USHORT;
typedef LONGLONG USN;
typedef wchar_t WCHAR;
typedef unsigned short WORD;
typedef UINT_PTR WPARAM;
typedef long double _Decimal128;
typedef _Decimal128 _Decimal128_t;
typedef _Decimal128 _Decimal128x;
typedef float _Decimal32;
typedef _Decimal32 _Decimal32_t;
typedef double _Decimal64;
typedef _Decimal64 _Decimal64_t;
typedef _Decimal64 _Decimal64x;
typedef long double _Float128;
typedef _Float128 _Float128_t;
typedef _Float128 _Float128x;
typedef float _Float16;
typedef _Float16 _Float16_t;
typedef float _Float32;
typedef _Float32 _Float32_t;
typedef _Float32 _Float32x;
typedef double _Float64;
typedef _Float64 _Float64_t;
typedef _Float64 _Float64x;
typedef _Float128 __float128;
typedef _Float64x __float80;
typedef _Float16 __fp16;
typedef long double __ibm128;
typedef long long __int128;
typedef short __int16;
typedef int __int32;
typedef long long __int64;
typedef signed char __int8;
typedef struct __m128 __m128;
typedef struct __m128d __m128d;
typedef struct __m128i __m128i;
typedef struct __m64 __m64;
typedef wchar_t __wchar_t;
typedef __int16 _int16;
typedef __int32 _int32;
typedef __int64 _int64;
typedef __int8 _int8;
typedef _Atomic bool atomic_bool;
typedef _Atomic char atomic_char;
typedef _Atomic char16_t atomic_char16_t;
typedef _Atomic char32_t atomic_char32_t;
typedef _Atomic char8_t atomic_char8_t;
typedef struct atomic_flag atomic_flag;
typedef _Atomic int atomic_int;
typedef _Atomic int_fast16_t atomic_int_fast16_t;
typedef _Atomic int_fast32_t atomic_int_fast32_t;
typedef _Atomic int_fast64_t atomic_int_fast64_t;
typedef _Atomic int_fast8_t atomic_int_fast8_t;
typedef _Atomic int_least16_t atomic_int_least16_t;
typedef _Atomic int_least32_t atomic_int_least32_t;
typedef _Atomic int_least64_t atomic_int_least64_t;
typedef _Atomic int_least8_t atomic_int_least8_t;
typedef _Atomic intmax_t atomic_intmax_t;
typedef _Atomic intptr_t atomic_intptr_t;
typedef _Atomic long long atomic_llong;
typedef _Atomic long atomic_long;
typedef _Atomic ptrdiff_t atomic_ptrdiff_t;
typedef _Atomic signed char atomic_schar;
typedef _Atomic short atomic_short;
typedef _Atomic size_t atomic_size_t;
typedef _Atomic unsigned char atomic_uchar;
typedef _Atomic unsigned atomic_uint;
typedef _Atomic uint_fast16_t atomic_uint_fast16_t;
typedef _Atomic uint_fast32_t atomic_uint_fast32_t;
typedef _Atomic uint_fast64_t atomic_uint_fast64_t;
typedef _Atomic uint_fast8_t atomic_uint_fast8_t;
typedef _Atomic uint_least16_t atomic_uint_least16_t;
typedef _Atomic uint_least32_t atomic_uint_least32_t;
typedef _Atomic uint_least64_t atomic_uint_least64_t;
typedef _Atomic uint_least8_t atomic_uint_least8_t;
typedef _Atomic uintmax_t atomic_uintmax_t;
typedef _Atomic uintptr_t atomic_uintptr_t;
typedef _Atomic unsigned long long atomic_ullong;
typedef _Atomic unsigned long atomic_ulong;
typedef _Atomic unsigned short atomic_ushort;
typedef _Atomic wchar_t atomic_wchar_t;
typedef int32_t blkcnt_t;
typedef int32_t blksize_t;
typedef char *caddr_t;
typedef unsigned cc_t;
typedef long clock_t;
typedef enum clockid_t clockid_t;
typedef pthread_cond_t cnd_t;
typedef void (*constraint_handler_t)(const char *restrict, void *restrict, errno_t);
typedef long daddr_t;
typedef int dev_t;
typedef struct div_t div_t;
typedef double double_t;
typedef int errno_t;
typedef struct fd_set fd_set;
typedef struct femode_t femode_t;
typedef struct fenv_t fenv_t;
typedef unsigned short fexcept_t;
typedef float float_t;
typedef struct fpos_t fpos_t;
typedef unsigned long fsblkcnt_t;
typedef unsigned long fsfilcnt_t;
typedef uint32_t gid_t;
typedef void *iconv_t;
typedef uint32_t id_t;
typedef struct imaxdiv_t imaxdiv_t;
typedef uint32_t in_addr_t;
typedef uint16_t in_port_t;
typedef unsigned ino_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef signed char int8_t;
typedef short int_fast16_t;
typedef int int_fast32_t;
typedef long int_fast64_t;
typedef signed char int_fast8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long int_least64_t;
typedef signed char int_least8_t;
typedef long intmax_t;
typedef long intptr_t;
typedef int jmp_buf[37];
typedef int32_t key_t;
typedef struct lconv lconv;
typedef struct ldiv_t ldiv_t;
typedef struct lldiv_t lldiv_t;
typedef struct locale_t locale_t;
typedef long double long_double_t;
typedef long double max_align_t;
typedef struct mbstate_t mbstate_t;
typedef enum memory_order memory_order;
typedef int32_t mode_t;
typedef pthread_mutex_t mtx_t;
typedef unsigned long nfds_t;
typedef uint32_t nlink_t;
typedef void *nullptr_t;
typedef long off_t;
typedef int once_flag;
typedef int32_t pid_t;
typedef void *posix_spawn_file_actions_t;
typedef void *posix_spawnattr_t;
typedef struct pthread_barrier_t pthread_barrier_t;
typedef struct pthread_barrierattr_t pthread_barrierattr_t;
typedef struct pthread_cond_t pthread_cond_t;
typedef struct pthread_condattr_t pthread_condattr_t;
typedef unsigned pthread_key_t;
typedef struct pthread_mutex_t pthread_mutex_t;
typedef struct pthread_mutexattr_t pthread_mutexattr_t;
typedef int pthread_once_t;
typedef struct pthread_rwlock_t pthread_rwlock_t;
typedef struct pthread_rwlockattr_t pthread_rwlockattr_t;
typedef volatile int pthread_spinlock_t;
typedef unsigned long pthread_t;
typedef long ptrdiff_t;
typedef struct regex_t regex_t;
typedef struct regmatch_t regmatch_t;
typedef size_t regoff_t;
typedef uint32_t rlim_t;
typedef unsigned long rsize_t;
typedef uint32_t sa_family_t;
typedef int sig_atomic_t;
typedef void (*sig_t)(int);
typedef void (*sighandler_t)(int);
typedef struct siginfo_t siginfo_t;
typedef unsigned long sigset_t;
typedef unsigned long size_t;
typedef uint32_t socklen_t;
typedef long ssize_t;
typedef int64_t suseconds_t;
typedef int (*thrd_start_t)(void*);
typedef pthread_t thrd_t;
typedef long time_t;
typedef void *timer_t;
typedef struct tm tm;
typedef void (*tss_dtor_t)(void*);
typedef void *tss_t;
typedef uint32_t uid_t;
typedef unsigned short uint16_t;
typedef unsigned uint32_t;
typedef unsigned long uint64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint_fast16_t;
typedef unsigned uint_fast32_t;
typedef unsigned long uint_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned short uint_least16_t;
typedef unsigned uint_least32_t;
typedef unsigned long uint_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned long uintmax_t;
typedef unsigned long uintptr_t;
typedef uint32_t useconds_t;
typedef void *va_list;
typedef int wctrans_t;
typedef unsigned long wctype_t;
typedef int wint_t;
c++decl> static cast x to int
static_cast<int>(x)
cdecl> struct S; show
typedef struct S S;
cdecl> typedef int Int; show
typedef int Int;
cdecl> union U; show
typedef union U U;
c++decl> using Int = int; show
using Int = int;
