cdecl> struct S
cdecl> struct T
cdecl> typedef const void const_void
cdecl> typedef enum E EE
cdecl> typedef int A2[2]
cdecl> typedef int Int
cdecl> typedef void F_v()
cdecl> 
cdecl> explain A2 f()
               ^
11,9: error: function returning array; did you mean function returning pointer?
cdecl> explain _Alignas(3) char c
               ^
12,9: error: "3": alignment must be a power of 2
cdecl> explain _Alignas(4) char c : 3
               ^
13,9: error: bit fields can not be aligned
cdecl> explain _Alignas(4) int f()
               ^
14,9: error: function can not be aligned
cdecl> explain int a[restrict 4]
                    ^
15,14: error: array can not be "restrict" except as function parameter
cdecl> explain restrict A2 x
               ^
16,9: error: array can not be "restrict" except as function parameter
cdecl> explain alignas(4) register int x
               ^
17,9: error: "alignas" can not be combined with "register"
cdecl> explain asm("x")
               ^
18,9: error: asm declarations not supported by cdecl
cdecl> explain _Alignas(64) S x
               ^
19,9: error: struct or union type "S" (aka, "struct S") can not be aligned in C
cdecl> explain _Alignas(8) typedef int Int
               ^
20,9: error: typedef can not be aligned
cdecl> explain _Atomic A2 x
               ^
21,9: error: array can not be "_Atomic"
cdecl> explain _Atomic(const int) x
                       ^
22,17: error: "_Atomic" can not be of "const"
cdecl> explain auto f()
               ^
23,9: error: function returning "auto" not supported in C
cdecl> explain auto *p
                    ^
24,14: error: "auto" with pointer declarator not supported in C
cdecl> explain auto x, y
               ^
25,9: error: "auto" with multiple declarators not supported in C
cdecl> explain ~C()
             ^
26,7: error: destructors not supported in C
cdecl> explain constexpr volatile int x
               ^
27,9: error: "constexpr volatile" is illegal in C
cdecl> explain EE x : 4
               ^
28,9: error: enum bit-fields not supported in C
cdecl> explain enum E x : 3
               ^
29,9: error: enum bit-fields not supported in C
cdecl> explain extern "C" int x
               ^
30,9: error: "extern "C" int" is illegal in C
cdecl> explain extern static void f()
                                  ^
31,28: error: "extern static" is illegal for function
cdecl> explain friend void f()
               ^
32,9: error: "friend": unsupported keyword in C
cdecl> explain F_v f()
               ^
33,9: error: function returning function type "F_v" (aka, "void()") is illegal; did you mean function returning pointer to function?
cdecl> explain F_v x[4]
                    ^
34,14: error: array of function type "F_v" (aka, "void()") is illegal; did you mean array of pointer to function?
cdecl> explain inline int x
               ^
35,9: error: inline variables not supported in C
cdecl> explain int
                  ^
36,12: error: declaration expected
cdecl> explain int a[0]
                    ^
37,14: error: array dimension must be > 0
cdecl> explain int C::*p
                   ^
38,13: error: pointer to member not supported in C
cdecl> explain int f()()
                   ^
39,13: error: function returning function is illegal; did you mean function returning pointer to function?
cdecl> explain int f()()()
                   ^
40,13: error: function returning function is illegal; did you mean function returning pointer to function?
cdecl> explain int f()[]
                      ^
41,16: error: function returning array; did you mean function returning pointer?
cdecl> explain int (*f) const
declare f as pointer to integer
                        ^
42,18: syntax error: "const": unexpected token ("const" is a keyword)
cdecl> explain int (f[4])()
                   ^
43,13: error: array of function is illegal; did you mean array of pointer to function?
cdecl> explain int f[5](double)
                    ^
44,14: error: array of function is illegal; did you mean array of pointer to function?
cdecl> explain int* f(x)
                      ^
45,16: error: type specifier required since C23
cdecl> explain int int8_t
                   ^
46,13: error: "int8_t" is a predefined type starting in C99
cdecl> explain int main( char, char )
                         ^
47,19: error: invalid main() first parameter type "char"; must be "int" or a typedef thereof
cdecl> explain int main( int )
                         ^
48,19: error: a single parameter for main() must be "void"
cdecl> explain int main( int, char )
                              ^
49,24: error: invalid main() parameter type "char"; must be "char*[]"
cdecl> explain int main( int, char *argv[], int )
                                            ^
50,38: error: invalid main() parameter type "int"; must be "char*[]"
cdecl> explain int main( int, int** )
                                  ^
51,28: error: invalid main() parameter type "int**"; must be "char**"
cdecl> explain int main(int, int, int, int)
                        ^
52,18: error: main() must have 0-3 parameters
cdecl> explain int (^S)()
                     ^
53,15: error: "S": previously declared as type "struct S"
cdecl> explain int S[4]
                   ^
54,13: error: "S": previously declared as type "struct S"
cdecl> explain int S::x : 3
               ^
55,9: error: scoped names can not have bit-field widths
cdecl> explain int &*x
                   ^
56,13: error: pointer to reference is illegal; did you mean "*&"?
cdecl> explain int &x
                   ^
57,13: error: reference not supported in C
cdecl> explain int x, *x
                      ^
58,16: error: "x": redefinition with different type
cdecl> explain int x, y, *x
                         ^
59,19: error: "x": redefinition with different type
cdecl> explain long bool x
               ^
60,9: error: "long bool" is illegal for built-in type
cdecl> explain long char x
               ^
61,9: error: "long char" is illegal for built-in type
cdecl> explain long char16_t x
               ^
62,9: error: "long char16_t" is illegal for built-in type
cdecl> explain long char32_t x
               ^
63,9: error: "long char32_t" is illegal for built-in type
cdecl> explain long float x
               ^
64,9: error: "long float" is illegal for built-in type unless K&RC
cdecl> explain long long long x
                         ^
65,19: error: "long" can not be combined with "long long"
cdecl> explain long void x
               ^
66,9: error: "long void" is illegal for built-in type
cdecl> explain long wchar_t x
               ^
67,9: error: "long wchar_t" is illegal for built-in type
cdecl> explain [[nodiscard]] int x
               ^
68,9: error: built-in type can not be "nodiscard"
cdecl> explain pure virtual void f()
               ^
69,9: error: "pure": unknown name
cdecl> explain register int C::*x
                            ^
70,22: error: pointer to member not supported in C
cdecl> explain register int f(void)
                            ^
71,22: error: function can not be "register"
cdecl> explain [[reproducible]] int x
               ^
72,9: error: built-in type can not be "reproducible"
cdecl> explain restrict Int p
               ^
8,9: error: built-in type can not be "restrict"
cdecl> explain short bool x
               ^
74,9: error: "short bool" is illegal for built-in type
cdecl> explain short char x
               ^
75,9: error: "short char" is illegal for built-in type
cdecl> explain short char16_t x
               ^
76,9: error: "short char16_t" is illegal for built-in type
cdecl> explain short char32_t x
               ^
77,9: error: "short char32_t" is illegal for built-in type
cdecl> explain short double x
               ^
78,9: error: "short double" is illegal for built-in type
cdecl> explain short float x
               ^
79,9: error: "short float" is illegal for built-in type
cdecl> explain short int main( int, char *argv[] )
               ^
80,9: error: invalid main() return type "short"; must be "int" or a typedef thereof
cdecl> explain short long long x
               ^
81,9: error: "short long long" is illegal for built-in type
cdecl> explain short long x
               ^
82,9: error: "short long" is illegal for built-in type
cdecl> explain short void x
               ^
83,9: error: "short void" is illegal for built-in type
cdecl> explain short wchar_t x
               ^
84,9: error: "short wchar_t" is illegal for built-in type
cdecl> explain signed _BitInt(0) x
               ^
85,9: error: signed _BitInt must be at least 2 bits
cdecl> explain signed _BitInt(1) x
               ^
86,9: error: signed _BitInt must be at least 2 bits
cdecl> explain signed bool x
               ^
87,9: error: "signed bool" is illegal for built-in type
cdecl> explain signed char16_t x
               ^
88,9: error: "signed char16_t" is illegal for built-in type
cdecl> explain signed char32_t x
               ^
89,9: error: "signed char32_t" is illegal for built-in type
cdecl> explain signed void x
               ^
90,9: error: variable of "void"; did you mean "void*"?
cdecl> explain signed wchar_t x
               ^
91,9: error: "signed wchar_t" is illegal for built-in type
cdecl> explain static int main()
                          ^
92,20: error: main() can not be "static" in C
cdecl> explain type int x
               ^
93,9: error: "type": unknown name
cdecl> explain typedef char int32_t
                            ^
94,22: error: type "char" redefinition incompatible with original type "int32_t" (aka, "int")
cdecl> explain typeof(x) y
                      ^
95,16: syntax error: "x": typeof(expression) declarations not supported by cdecl
cdecl> explain unsigned _BitInt(0) x
               ^
96,9: error: unsigned _BitInt must be at least 1 bit
cdecl> explain unsigned bool x
               ^
97,9: error: "unsigned bool" is illegal for built-in type
cdecl> explain unsigned char16_t x
               ^
98,9: error: "unsigned char16_t" is illegal for built-in type
cdecl> explain unsigned char32_t x
               ^
99,9: error: "unsigned char32_t" is illegal for built-in type
cdecl> explain unsigned double x
               ^
100,9: error: "unsigned double" is illegal for built-in type
cdecl> explain unsigned float x
               ^
101,9: error: "unsigned float" is illegal for built-in type
cdecl> explain unsigned void x
               ^
102,9: error: "unsigned void" is illegal for built-in type
cdecl> explain unsigned wchar_t x
               ^
103,9: error: "unsigned wchar_t" is illegal for built-in type
cdecl> explain unsigned *x : 3
                        ^
104,18: error: invalid bit-field type "unsigned*"; must be an integral type
cdecl> explain unsigned S
               ^
105,9: error: "S": previously declared as type "struct S"
cdecl> explain using f = void (*)(int)
               ^
106,9: error: "using": unsupported keyword in C
cdecl> explain virtual void f()
               ^
107,9: error: "virtual": unsupported keyword in C
cdecl> explain virtual void f() override final
               ^
108,9: error: "virtual": unsupported keyword in C
cdecl> explain void a[4]
                     ^
109,15: error: array of "void"; did you mean array of "void*"?
cdecl> explain void __cdecl *p
                    ^
110,14: error: "__cdecl" can be used only for functions and pointers to function
cdecl> explain void f( ..., ... )
                       ^
111,17: error: "..." must be last
cdecl> explain void f( ..., char const *fmt )
                       ^
112,17: error: "..." must be last
cdecl> explain void f( ..., void )
                       ^
113,17: error: "..." must be last
cdecl> explain void f() const
                    ^
114,14: error: function can not be "const"
cdecl> explain void f( int ()() )
                           ^
115,21: error: function returning function is illegal; did you mean function returning pointer to function?
cdecl> explain void f( int, int, void )
                                 ^
116,27: error: "void" must be only parameter if specified
cdecl> explain void f( int, void )
                            ^
117,22: error: "void" must be only parameter if specified
cdecl> explain void f( void, ... )
                       ^
118,17: error: "void" must be only parameter if specified
cdecl> explain void f( void, int )
                       ^
119,17: error: "void" must be only parameter if specified
cdecl> explain void f( void, void )
                       ^
120,17: error: "void" must be only parameter if specified
cdecl> explain void f(const void)
                      ^
121,16: error: "void" parameters can not be "const"
cdecl> explain void f(const_void)
                      ^
122,16: error: "void" parameters can not be "const"
cdecl> explain void f(double d, int x[d])
                                     ^
123,31: error: invalid array dimension type "double"; must be integral
cdecl> explain void f(int x[][])
                             ^
124,23: error: array dimension required
cdecl> explain void f(int x, int x)
                             ^
125,23: error: "x": redefinition of parameter
cdecl> explain void f(int x[static *])
                                   ^
126,29: syntax error: "*": ']' expected
cdecl> explain void f(register i)
                      ^
127,16: error: implicit "int" is illegal since C99
cdecl> explain void f(static int x)
                      ^
128,16: error: function parameters can not be "static"
cdecl> explain void f(t x)
                        ^
129,18: syntax error: "x": ',' expected
cdecl> explain void f(unsigned x : 3)
                      ^
130,16: error: invalid parameter: can not have bit-field width
cdecl> explain void f(void x)
                      ^
131,16: error: "void" parameters can not have a name
cdecl> explain void main()
               ^
132,9: error: invalid main() return type "void"; must be "int" or a typedef thereof
cdecl> explain void (*restrict p)()
                    ^
133,14: error: pointer to function can not be "restrict"
cdecl> explain void x
               ^
134,9: error: variable of "void"; did you mean "void*"?
cdecl> explain []
               ^
135,9: error: lambdas not supported in C
cdecl> explain int __DATE__
               ^
136,9: error: "__DATE__" is a predefined macro
cdecl> 
cdecl> set knr
cdecl> explain const int x
               ^
139,9: error: "const": unsupported keyword until C89; did you mean "__const"?
cdecl> explain enum E x
               ^
140,9: error: "enum": unsupported type until C89
cdecl> explain int f(double)
                     ^
141,15: error: function prototypes not supported until C89
cdecl> explain int f(x, ...)
                        ^
142,18: error: function prototypes not supported until C89
cdecl> explain int main(x)
                        ^
143,18: error: main() must have 0, 2, or 3 parameters in K&RC
cdecl> explain long double x
               ^
144,9: error: "long double" is illegal for built-in type until C89
cdecl> explain long long x
               ^
145,9: error: "long long" is illegal for built-in type until C99
cdecl> explain S f()
               ^
146,9: error: function returning struct or union type "S" (aka, "struct S") not supported until C89
cdecl> explain signed char x
               ^
147,9: error: "signed": unsupported type until C89; did you mean "__signed" or "unsigned"?
cdecl> explain signed int x
               ^
148,9: error: "signed": unsupported type until C89; did you mean "__signed" or "unsigned"?
cdecl> explain signed long x
               ^
149,9: error: "signed": unsupported type until C89; did you mean "__signed" or "unsigned"?
cdecl> explain struct S f()
               ^
150,9: error: function returning struct or union not supported until C89
cdecl> explain void *p
               ^
151,9: error: "void": unsupported type until C89
cdecl> explain volatile int x
               ^
152,9: error: "volatile": unsupported keyword until C89; did you mean "__volatile"?
cdecl> 
cdecl> set c89
cdecl> explain bool x
               ^
155,9: error: "bool": unsupported type in C
cdecl> explain long long x
               ^
156,9: error: "long long" is illegal for built-in type until C99
cdecl> explain wchar_t x
               ^
157,9: error: "wchar_t": unsupported type until C95
cdecl> 
cdecl> set c99
cdecl> explain char16_t x
               ^
160,9: error: "char16_t": unsupported type until C11; did you mean "wchar_t"?
cdecl> explain char32_t x
               ^
161,9: error: "char32_t": unsupported type until C11; did you mean "wchar_t"?
cdecl> explain int _Accum
                   ^
162,13: error: declaration expected ("_Accum" is a keyword in C99 (with Embedded C extensions))
cdecl> explain int _Fract
                   ^
163,13: error: declaration expected ("_Fract" is a keyword in C99 (with Embedded C extensions))
cdecl> explain thread_local int x
               ^
164,9: error: "thread_local": unsupported keyword until C23
cdecl> 
cdecl> set c17
cdecl> explain constexpr int x
               ^
167,9: error: "constexpr": unsupported keyword until C23
cdecl> explain enum E : int x
                        ^
168,18: error: enum with underlying type not supported until C23
cdecl> explain typeof(int) x
               ^
169,9: error: implicit "int" functions are illegal since C99; "typeof" not a keyword until C23; use "__typeof__" instead
cdecl> explain void f( ... )
                       ^
170,17: error: "..." as only parameter not supported until C23
cdecl> 
cdecl> set c++
c++decl> typedef int &RI
c++decl> 
c++decl> explain [] extern
                 ^
175,9: error: lambda can not be "extern"
c++decl> explain [&,&]
                    ^
176,12: error: default capture previously specified
c++decl> explain [&,=]
                    ^
177,12: error: default capture previously specified
c++decl> explain [=,&]
                    ^
178,12: error: default capture previously specified
c++decl> explain [=,=]
                    ^
179,12: error: default capture previously specified
c++decl> explain auto int x
                      ^
180,14: error: declaration expected ("int" is a keyword)
c++decl> explain auto [x, x]
                 ^
181,9: error: "x": redefinition of structured binding
c++decl> explain auto [x] f()
                 ^
182,9: error: function returning structured binding is illegal
c++decl> explain extern auto [x]
                 ^
183,9: error: structured binding may not be "extern"
c++decl> explain C() const
                 ^
184,9: error: constructors can not be "const"
c++decl> explain C(int, int) = default
                 ^
185,9: error: "default" can be used only for special member functions and relational operators
c++decl> explain constinit int f()
                               ^
186,23: error: function can not be "constinit"
c++decl> explain decltype(x) y
                 ^
187,9: error: decltype declarations not supported by cdecl
c++decl> explain enum class C x
                 ^
188,9: error: "enum class": enum classes must just use "enum"
c++decl> explain enum E : double x
                          ^
189,18: error: invalid enum underlying type "double"; must be integral
c++decl> explain enum struct C x
                 ^
190,9: error: "enum struct": enum classes must just use "enum"
c++decl> explain explicit C(int) const
                          ^
191,18: error: constructors can not be "const"
c++decl> explain export static int x
                 ^
192,9: error: "export static int" is illegal for built-in type
c++decl> explain extern R"abc(X)ab)abc" void f()
                        ^
193,16: error: "X)ab": unknown linkage language; did you mean "C" or "C++"?
c++decl> explain extern void v
                 ^
194,9: error: variable of "void"; did you mean "void*"?
c++decl> explain [[foo]] int x
                   ^
195,11: warning: "foo": unknown attribute
declare x as integer
c++decl> explain friend static void f()
                                    ^
196,28: error: "friend static" is illegal for function
c++decl> explain [&,&i]
                    ^
197,12: error: default capture is already by reference
c++decl> explain [i,&]
                    ^
198,12: error: default capture must be specified first
c++decl> explain [i,=]
                    ^
199,12: error: default capture must be specified first
c++decl> explain [i,i]
                    ^
200,12: error: "i" previously captured
c++decl> explain int &const r
                     ^
201,13: error: reference can not be "const"; did you mean "const&"?
c++decl> explain int& &&r
declare r as rvalue reference to reference to integer
c++decl> explain int& &r
declare r as reference to reference to integer
c++decl> explain int&& &&r
declare r as rvalue reference to rvalue reference to integer
c++decl> explain int&& &r
declare r as reference to rvalue reference to integer
c++decl> explain int& r[2]
                    ^
206,12: error: array of reference is illegal; did you mean (&r)[]?
c++decl> explain int *restrict p
                      ^
207,14: error: "restrict" not supported in C++; use "__restrict" instead
c++decl> explain int S3::x : 3
                 ^
208,9: error: scoped names can not have bit-field widths
c++decl> explain int &&*x
                     ^
209,13: error: pointer to rvalue reference is illegal; did you mean "*&"?
c++decl> explain int x, x
                 ^
210,9: error: "x": redefinition
c++decl> explain long char8_t x
                 ^
211,9: error: "long char8_t" is illegal for built-in type
c++decl> explain noreturn void f(int)
                 ^
212,9: error: "noreturn" keyword not supported in C++; did you mean [[noreturn]]?
c++decl> explain [[no_unique_address]] int x : 4
                 ^
213,9: error: "no_unique_address" built-in types can not have bit-field widths
c++decl> explain [[no_unique_address]] void f()
                                            ^
214,36: error: function can not be "no_unique_address"
c++decl> explain *p
                 ^
215,9: error: implicit "int" is illegal in C++
c++decl> explain register int &x
                              ^
216,22: error: "register" is illegal for reference since C++17
c++decl> explain RI *p
                    ^
217,12: error: pointer to reference type "RI" (aka, "int&") is illegal
c++decl> explain short char8_t x
                 ^
218,9: error: "short char8_t" is illegal for built-in type
c++decl> explain signed char8_t x
                 ^
219,9: error: "signed char8_t" is illegal for built-in type
c++decl> explain static mutable int x
                 ^
220,9: error: "mutable static int" is illegal for built-in type
c++decl> explain static void f() &
                             ^
221,21: error: reference qualified functions can not be "static"
c++decl> explain static void f() &&
                             ^
222,21: error: reference qualified functions can not be "static"
c++decl> explain static void f() const
                             ^
223,21: error: "static" functions can not be "const"
c++decl> explain static void f( this S &self )
                                       ^
224,31: error: function with "this" parameter can not be "static"
c++decl> explain [*this,*this]
                        ^
225,16: error: "this" previously captured
c++decl> explain [*this,this]
                        ^
226,16: error: "this" previously captured
c++decl> explain [this,*this]
                       ^
227,15: error: "this" previously captured
c++decl> explain [this,this]
                       ^
228,15: error: "this" previously captured
c++decl> explain typename T x
                          ^
229,18: error: qualified name expected after "typename"
c++decl> explain unsigned char8_t x
                 ^
230,9: error: "unsigned char8_t" is illegal for built-in type
c++decl> explain virtual void C::f()
                              ^
231,22: error: "C::f": "virtual" can not be used in file-scoped functions
c++decl> explain virtual void f() = 1
                                    ^
232,28: error: '0' expected
c++decl> explain virtual void f( this S &self )
                                        ^
233,32: error: function with "this" parameter can not be "virtual"
c++decl> explain void f() = 0
                      ^
234,14: error: non-virtual function can not be pure
c++decl> explain void f() = default
                      ^
235,14: error: "default" can be used only for special member functions and relational operators
c++decl> explain void f() -> void
                 ^
236,9: error: function with trailing return type must only specify "auto"
c++decl> explain void f( int x, this S &self )
                                       ^
237,31: error: "this" can be only first parameter
c++decl> explain void f() restrict
declare f as function returning void
                          ^
238,18: syntax error: "restrict": unexpected token ("restrict" is a keyword)
c++decl> explain void f( this S &self ) &
                                ^
239,24: error: function with "this" parameter can not be "reference"
c++decl> explain void f( this S &self ) const
                                ^
240,24: error: function with "this" parameter can not be "const"
c++decl> explain void f() throw()
                      ^
241,14: error: "throw" not supported since C++17; did you mean "noexcept"?
c++decl> explain void f(int (*g) const)
                                 ^
242,25: syntax error: "const": ',' expected
c++decl> explain void f(int SP::x)
                        ^
243,16: error: parameter names can not be scoped
c++decl> explain void f(int x[*])
                             ^
244,21: error: variable length arrays not supported in C++
c++decl> explain void f(int x[const 3])
                             ^
245,21: error: "const" arrays not supported in C++
c++decl> explain void f(int x[static 3])
                             ^
246,21: error: "static" arrays not supported in C++
c++decl> explain void f(x)
                        ^
247,16: error: type specifier required in C++
c++decl> explain int S::__DATE__
                 ^
248,9: error: "__DATE__" is a predefined macro
c++decl> 
c++decl> explain auto ...
                         ^
250,17: syntax error: name expected
c++decl> explain auto... f()
                 ^
251,9: error: function can not return parameter pack
c++decl> explain auto... f(), x
                     ^
252,13: error: can not use parameter pack in multiple declaration
c++decl> explain auto... x, f()
                 ^
253,9: error: can not use parameter pack in multiple declaration
c++decl> explain auto&... f()
                     ^
254,13: error: function can not return parameter pack
c++decl> explain auto&... f(), x
                     ^
255,13: error: function can not return parameter pack
c++decl> explain auto&... x, f()
                     ^
256,13: error: can not use parameter pack in multiple declaration
c++decl> explain auto*... f()
                     ^
257,13: error: function can not return parameter pack
c++decl> explain void f(int ...)
                        ^
258,16: error: parameter pack type must be "auto"
c++decl> explain void f(int &...)
                        ^
259,16: error: parameter pack type must be "auto"
c++decl> 
c++decl> explain void &x
                      ^
261,14: error: reference to "void" is illegal; did you mean "void*"?
c++decl> explain C::~C(int)
                       ^
262,15: syntax error: destructors may not have parameters
c++decl> explain X::C()
                 ^
263,9: error: "X::C": unknown name
c++decl> explain X::~C()
                 ^
264,9: error: matching class name after '~' expected
c++decl> 
c++decl> set c++03
c++decl> explain auto f() -> void
                          ^
267,18: error: trailing return type not supported until C++11
c++decl> explain char16_t x
                 ^
268,9: error: "char16_t": unsupported type until C++11; did you mean "wchar_t"?
c++decl> explain char32_t x
                 ^
269,9: error: "char32_t": unsupported type until C++11; did you mean "wchar_t"?
c++decl> explain explicit operator bool()
                        ^
270,16: error: user-defined conversion operator can not be "explicit" until C++11
c++decl> explain void f() &
                      ^
271,14: error: reference qualified functions not supported until C++11
c++decl> explain void f() &&
                      ^
272,14: error: reference qualified functions not supported until C++11
c++decl> explain void f(int &&r)
                            ^
273,20: error: rvalue reference not supported until C++11
c++decl> 
c++decl> set c++11
c++decl> explain auto f()
                 ^
276,9: error: function returning "auto" not supported until C++14
c++decl> explain constexpr void f()
                                ^
277,24: error: "constexpr void" is illegal until C++14
c++decl> explain [*this]
                  ^
278,10: error: capturing "*this" not supported until C++17
c++decl> 
c++decl> set c++17
c++decl> explain char8_t x
                 ^
281,9: error: "char8_t": unsupported type until C++20; did you mean "char16_t", "char32_t", or "wchar_t"?
c++decl> explain void f(auto)
                        ^
282,16: error: "auto" parameters not supported until C++20
c++decl> 
c++decl> set c++20
c++decl> explain _Atomic(int) x
                 ^
285,9: error: "_Atomic int" is illegal for built-in type until C++23
explain int
           ^
291,12: error: declaration expected
explain int
           ^
295,12: error: declaration expected
explain int
           ^
data/explain-error-5.cdeclrc:5,12: error: declaration expected
