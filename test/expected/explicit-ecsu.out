c++decl> 
c++decl> declare s as struct S
struct S s;
c++decl> declare u as union U
union U u;
c++decl> declare e as enum E
E e;
c++decl> declare c as class C
C c;
c++decl> 
c++decl> set explicit-ecsu=ecsu
c++decl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
    explicit-ecsu=ecsu
  noexplicit-int
  nographs
  noinfer-command
    lang=C++23
    prompt
    semicolon
  notrailing-return
    using
    west-decl=bflo
c++decl> 
c++decl> declare s as struct S
struct S s;
c++decl> declare u as union U
union U u;
c++decl> declare e as enum E
enum E e;
c++decl> declare c as class C
class C c;
c++decl> 
c++decl> class C
c++decl> explain C *p
declare p as pointer to class C
c++decl> 
c++decl> set noexplicit-ecsu
c++decl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
  noexplicit-ecsu
  noexplicit-int
  nographs
  noinfer-command
    lang=C++23
    prompt
    semicolon
  notrailing-return
    using
    west-decl=bflo
c++decl> 
c++decl> declare s as struct S
S s;
c++decl> declare u as union U
U u;
c++decl> declare e as enum E
E e;
c++decl> declare c as class C
C c;
