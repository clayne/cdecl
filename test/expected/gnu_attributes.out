cdecl> explain __attribute__(( foo("x") )) int i
               ^
3,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo('x') )) int i
               ^
4,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo() )) int i
               ^
5,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo(1) )) int i
               ^
6,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo(1), bar )) int i
               ^
7,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo(1,2) )) int i
               ^
8,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__(( foo(name) )) int i
               ^
9,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__((const)) int i
               ^
10,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> explain __attribute__((unused)) int i
               ^
11,9: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare i as integer
cdecl> set c17
cdecl> explain __attribute__((unused)) int i
               ^
13,9: warning: "__attribute__" not supported by cdecl (ignoring)
declare i as integer
cdecl> set c
cdecl> 
cdecl> explain int *__attribute__(( foo )) const p
                    ^
16,14: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare p as constant pointer to integer
cdecl> explain int *const __attribute__(( foo )) p
                          ^
17,20: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare p as constant pointer to integer
cdecl> explain int *const __attribute__(( foo )) __attribute__(( bar )) p
                          ^
18,20: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
                                                 ^
18,43: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare p as constant pointer to integer
cdecl> explain int *volatile __attribute__(( foo )) const p
                             ^
19,23: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare p as constant volatile pointer to integer
cdecl> explain int *volatile __attribute__(( foo )) const __attribute__(( bar )) p
                             ^
20,23: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
                                                          ^
20,52: warning: "__attribute__" not supported by cdecl (ignoring); did you mean [[...]]?
declare p as constant volatile pointer to integer
