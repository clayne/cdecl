[] = 0 or 1; * = 0 or more; {} = one of; | = alternate; <> = defined elsewhere
command:
  declare <name> as <english>         | set [options]
  cast <name> into <english>          | help | ?
  explain <gibberish>                 | exit | quit | q
english:
  [<storage>]* array [<number>] of <english>
  block [([<args>])] [returning <english>]
  [<storage>]* [<fn-qualifier>]* function [([<args>])] [returning <english>]
  [<cv-qualifier]* pointer to [member of class <name>] <english>
  [rvalue] reference to <english>
  <type>
type:
  [<storage>]* [<modifier>]* [<C++-type>]
  { enum [class|struct] | struct | union | class } <name>
args: a comma separated list of <english> or <name> as <english>
gibberish: a C++ declaration, like "int x"; or cast, like "(int)x"
C++-type: bool char char16_t char32_t wchar_t int float double size_t void
cv-qualifier: const volatile
fn-qualifier: const volatile [rvalue] reference
modifier: short long signed unsigned const volatile
name: a C++ identifier
storage: constexpr extern friend register static thread_local [pure] virtual
