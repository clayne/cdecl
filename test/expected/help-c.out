[] = 0 or 1; * = 0 or more; {} = one of; | = alternate; <> = defined elsewhere
command:
  declare <name> as <english>
  cast <name> into <english>
  explain <gibberish>
  set [options]
  help | ?
  exit | quit | q
english:
  [<storage>]* array [<number>] of <english>
  block [([<args>])] [returning <english>]
  [<storage>]* [const|volatile]* function [([<args>])] [returning <english>]
  [const|volatile|restrict]* pointer to <english>
  <type>
type:
  [<storage>]* [<modifier>]* [<C-type>]
  { enum | struct | union } <name>
args: a comma separated list of <name>, <english>, or <name> as <english>
gibberish: a C declaration, like "int x"; or cast, like "(int)x"
C-type: bool char char16_t char32_t wchar_t int float double size_t void
modifier: short long signed unsigned const restrict volatile
storage: auto extern register static _Thread_local
