[] = 0 or 1; * = 0 or more; {} = one of; | = alternate; <> = defined elsewhere
command:
  explain <gibberish>        | declare <name> as <english>
  cast <name> into <english>
  define <name> as <english> | typedef <gibberish>
  show { <name> | all | predefined | user } [typedef]
  set [options]              | help | ?            | exit | quit | q
english:
  <storage>* array [[static] <cv-qualifier>* {<number>|*}] of <english>
  <storage>* variable length array <cv-qualifier>* of <english>
  block [([<args>])] [returning <english>]
  <storage>* function [([<args>])] [returning <english>]
  <cv-qualifier>* pointer to <english>
  <storage>* <modifier>* [<C-type>]
  { enum | struct | union } <name>
args: a comma separated list of <name>, <english>, or <name> as <english>
gibberish: a C declaration, like "int x"; or cast, like "(int)x"
C-type: bool char char16_t char32_t wchar_t int float double void
cv-qualifier: _Atomic const restrict volatile
modifier: short long signed unsigned atomic const restrict volatile
name: a C identifier
storage: auto extern register static thread_local
