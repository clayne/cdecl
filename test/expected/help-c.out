command:
  cast <name> {as|[in]to} <english>
  declare <name> as <english> [width <number> [bits]]
  declare <name> as <english> align[ed] [as|to] {<number> [bytes] | <english>}
  define <name> as <english>
  explain <gibberish>
  { help | ? } [command[s] | english]
  set [<option> [= <value>] | options | <lang>]*
  show [<name> | [all] {predef[ined] | user}] [[as] {english | typedef}]
  typedef <gibberish> [, <gibberish>]*
  exit | q[uit]
gibberish: a C declaration, like "int x"; or cast, like "(int)x"
option:
  [no]alt-tokens [no]debug {di|tri|no}graphs [no]east-const
  [no]explain-by-default [no]explicit-int[=<types>] lang=<lang>
  [no]prompt [no]semicolon
lang: K[&|N]R[C] | C[K[&|N]R|89|95|99|11|17|2X] | C++[98|03|11|14|17|20]
where: [] = 0 or 1; * = 0 or more; + = 1 or more; {} = one of; | = alternate
