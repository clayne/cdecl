[] = 0 or 1; * = 0 or more; {} = one of; | = alternate; <> = defined elsewhere
command:
  declare <name> as <english>         | set [options]         | help | ?
  explain <gibberish>                 | exit | quit | q
  cast <name> into <english>
english:
  [<storage>]* array [<number>] of <english>
  block [([<args>])] [returning <english>]
  [<storage>]* function [([<args>])] [returning <english>]
  [<cv-qualifier>]* pointer to <english>
  <type>
type:
  [<storage>]* [<modifier>]* [<C-type>]
  { enum | struct | union } <name>
args: a comma separated list of <name>, <english>, or <name> as <english>
gibberish: a C declaration, like "int x"; or cast, like "(int)x"
C-type: bool char char16_t char32_t wchar_t int float double size_t void
cv-qualifier: _Atomic const restrict volatile
modifier: short long signed unsigned atomic const restrict volatile
name: a C identifier
storage: auto extern register static thread_local
