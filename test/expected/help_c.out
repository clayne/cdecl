  [] means optional; {} means 1 or more; <> means defined elsewhere
    commands are separated by ';' and newlines
  command:
    declare <name> as <english>
    cast <name> into <english>
    explain <gibberish>
    set or set options
    help, ?
    quit or exit
  english:
    function [( <decl-list> )] returning <english>
    block [( <decl-list> )] returning <english>
    array [<number>] of <english>
    [{ const | volatile | noalias }] pointer to <english>
    <type>
  type:
    {[<storage-class>] [{<modifier>}] [<C-type>]}
    { struct | union | enum } <name>
  decllist: a comma separated list of <name>, <english>, or <name> as <english>
  name: a C identifier
  gibberish: a C declaration, like 'int *x', or cast, like '(int *)x'
  storage-class: auto, extern, register, or static
  C-type: bool, int, char, wchar_t, float, double, or void
  modifier: short, long, signed, unsigned, const, volatile, or noalias
