 | = alternate; [] = optional; {} = 1 or more; <> = defined elsewhere
 command:
   declare <name> as <english>
   cast <name> into <english>
   explain <gibberish>
   set [options]
   help | ?
   exit | quit
 english:
   array [<number>] of <english>
   block [( [<decl-list>] )] returning <english>
   function [( [<decl-list>] )] returning <english>
   [{const|volatile}] {pointer|reference} to [member of class <name>] <english>
   <type>
 type:
   [<storage-class>] [{<modifier>}] [<C++-type>]
   { enum | struct | union | class } <name>
 decl-list: a comma separated list of <name>, <english>, or <name> as <english>
 name: a C++ identifier
 gibberish: a C++ declaration, like "int *x", or cast, like "(int*)x"
 C++-type: bool, int, char, char16_t, char32_t, wchar_t, float, double, or void
 modifier: short, long, signed, unsigned, const, or volatile
 storage-class: extern, register, static, or thread_local
