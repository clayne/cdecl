cdecl> struct S
cdecl> 
cdecl> set c17
cdecl> declare a as array 9 of int
int a??(9??);
cdecl> explain int a??(9??)
declare a as array 9 of integer
cdecl> 
cdecl> set c++
warning: trigraphs not supported since C++17
c++decl> declare f as non-returning function (int) returning void
[[noreturn]] void f(int);
c++decl> 
c++decl> set c++11
c++decl> declare f as non-returning function (int) returning void
??(??(noreturn??)??) void f(int);
c++decl> declare ??'= as operator (int) returning reference to S
S& operator??'=(int);
c++decl> declare ??' as operator (reference to constant S, int) returning S
S operator??'(const S&, int);
c++decl> declare ??!??! as operator (reference to constant S, reference to constant S) returning bool
bool operator??!??!(const S&, const S&);
c++decl> declare ??! as operator (reference to constant S, reference to constant S) returning S
S operator??!(const S&, const S&);
c++decl> declare ??!= as operator (int) returning reference to S
S& operator??!=(int);
c++decl> declare ??- as operator returning S
S operator??-();
c++decl> declare [] as operator (int) returning int
int operator??(??)(int);
c++decl> 
c++decl> set c++
warning: trigraphs not supported since C++17
c++decl> explain int a??(9??)
                      ^
23,14: warning: trigraphs not supported since C++17
declare a as array 9 of integer
c++decl> 
c++decl> set c++03
c++decl> struct S ??< typedef int I; ??>
c++decl> show typedef
typedef struct S S;
struct S ??< typedef int I; ??>;
c++decl> 
c++decl> set c++11
c++decl> explain ??(??(noreturn??)??) void f(int)
declare f as non-returning function (integer) returning void
c++decl> explain S& operator??'=(int)
declare ??'= as member operator (integer) returning reference to structure S
c++decl> explain S operator??'(const S&, int)
declare ??' as non-member operator (reference to constant structure S, integer) returning structure S
c++decl> explain bool operator??!??!(const S&, const S&)
declare ??!??! as non-member operator (reference to constant structure S, reference to constant structure S) returning boolean
c++decl> explain S operator??!(const S&, const S&)
declare ??! as non-member operator (reference to constant structure S, reference to constant structure S) returning structure S
c++decl> explain S& operator??!=(int)
declare ??!= as member operator (integer) returning reference to structure S
c++decl> explain S operator??-()
declare ??- as member operator returning structure S
c++decl> explain auto ??(x, y??)
declare x, y as structured binding
c++decl> 
c++decl> set nographs
c++decl> 
c++decl> set knr
cdecl> set trigraphs
           ^
42,5: warning: trigraphs not supported until C89
cdecl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
    explicit-ecsu=su         (Not supported in C.)
  noexplicit-int
 trigraphs                   (Not supported until C89.)
  noinfer-command
    language=K&RC
  nopermissive-types
    prompt
    semicolon
  notrailing-return
    using                    (Not supported in C.)
    west-decl=bflo
cdecl> declare a as array 9 of int
int a[9];
cdecl> set nographs
cdecl> 
cdecl> set c23
cdecl> set trigraphs
           ^
48,5: warning: trigraphs not supported since C23
cdecl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
    explicit-ecsu=su         (Not supported in C.)
  noexplicit-int
 trigraphs                   (Not supported since C23.)
  noinfer-command
    language=C23
  nopermissive-types
    prompt
    semicolon
  notrailing-return
    using                    (Not supported in C.)
    west-decl=bflo
cdecl> declare a as array 9 of int
int a[9];
cdecl> set nographs
cdecl> 
cdecl> set c++
c++decl> set trigraphs
             ^
54,5: warning: trigraphs not supported since C++17
c++decl> set
  noalt-tokens
  nodebug
  noeast-const
    echo-commands
    english-types
    explicit-ecsu=su
  noexplicit-int
 trigraphs                   (Not supported since C++17.)
  noinfer-command
    language=C++23
  nopermissive-types
    prompt
    semicolon
  notrailing-return
    using
    west-decl=bflo
c++decl> declare a as array 9 of int
int a[9];
c++decl> set nographs
