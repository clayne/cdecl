EXPECTED_EXIT=0
cdecl -bEL$LINENO -xc++ <<END
struct S
using S2 = S
define SRE as reference to S
using SRU = S&
struct T

explain bool b, operator!(const S&)
explain bool operator!(), operator~()

explain S operator!(const S&)
explain S operator!(const S2&)
explain S operator!(const SRE)
explain S operator!(const SRU)

explain S operator%(const S&, const S&)
explain S operator%(const S&, int)
explain S operator%(int)

explain S operator&(const S&, const S&)
explain S operator&(const S&, int)

explain S operator*(const S&)
explain S operator*(const S&, const S&)
explain S operator*(const S&, int)

explain S operator+(const S&, const S&)
explain S operator+(const S&, int)
explain S operator+(int)

explain S operator,(const S&, int)

explain S operator-(const S&, const S&)
explain S operator-(const S&, int)
explain S operator-(int)

explain S operator/(const S&, const S&)
explain S operator/(const S&, int)

explain S operator<<(const S&, int)
explain S operator<<(int)

explain S operator>>(const S&, int)
explain S operator>>(int)

explain S operator^(const S&, int)

explain S operator|(const S&, const S&)

explain S operator~()
explain S operator~() const
explain S operator~(S const&)

explain S& S::operator=(S const&)
explain S& S::operator=(S const&) = default
explain S& S::operator=(S const&) = delete

explain S& operator%=(S&, int)
explain S& operator%=(int)
explain S& operator&(int)
explain S& operator&=(S&, int)
explain S& operator&=(int)
explain S& operator*()
explain S& operator*(S&) &
explain S& operator*(S&) &&
explain S& operator*(S&) const
explain S& operator*(S&) final
explain S& operator*(S&) override
explain S& operator*(S&) volatile
explain S& operator*(int)
explain S& operator*=(S&, int)
explain S& operator*=(int)
explain S& operator+(S&) &
explain S& operator+(S&) &&
explain S& operator+(S&) const
explain S& operator+(S&) final
explain S& operator+(S&) override
explain S& operator+(S&) volatile
explain S& operator++()
explain S& operator++(S&)
explain S& operator++(S&, int)
explain S& operator++(int) &
explain S& operator++(int) &&
explain S& operator++(int) const
explain S& operator++(int) final
explain S& operator++(int) override
explain S& operator++(int) volatile
explain S& operator+=(S&, int)
explain S& operator+=(int)
explain S& operator,(S&, int)
explain S& operator,(int)
explain S& operator-(S&) &
explain S& operator-(S&) &&
explain S& operator-(S&) const
explain S& operator-(S&) final
explain S& operator-(S&) override
explain S& operator-(S&) volatile
explain S& operator--(S&, int)
explain S& operator--(int) &
explain S& operator--(int) &&
explain S& operator--(int) const
explain S& operator--(int) final
explain S& operator--(int) override
explain S& operator--(int) volatile
explain S& operator-=(S&, int)
explain S& operator-=(int)
explain S& operator->*(S&, int)
explain S& operator->*(int)
explain S& operator/=(S&, int)
explain S& operator/=(int)
explain S& operator<<(S&, int)
explain S& operator<<(int)
explain S& operator<<=(S&, int)
explain S& operator<<=(int)
explain S& operator>>(S&, int)
explain S& operator>>(int)
explain S& operator>>=(S&, int)
explain S& operator>>=(int)
explain S& operator^=(S&, int)
explain S& operator^=(int)
explain S& operator|(int)
explain S& operator|=(S&, int)
explain S& operator|=(int)
explain S* operator&()
explain S* operator&(S&)
explain S* operator&(S&) &
explain S* operator&(S&) &&
explain S* operator&(S&) const
explain S* operator&(S&) final
explain S* operator&(S&) override
explain S* operator&(S&) volatile
explain S* operator->()
explain auto operator<=>(const S&)
explain auto operator<=>(const S&) const = default
explain auto operator<=>(const S&, const S&)
explain bool S::operator==(S const&) const = default
explain bool S::operator==(T const&, int)
explain bool operator ==(int)
explain bool operator!()
explain bool operator!=(S, int)
explain bool operator!=(int)
explain bool operator&&(const S&)
explain bool operator&&(const S&, const S&)
explain bool operator<(const S&, int)
explain bool operator<=(const S&, int)
explain bool operator==(S const&) const = default
explain bool operator==(S, int)
explain bool operator>(const S&, int)
explain bool operator>=(const S&, int)
explain bool operator||(const S&)
explain bool operator||(const S&, const S&)
explain friend bool S::operator!()
explain friend bool operator==(S const&, S const&) = default
explain friend bool operator==(S, S) = default
explain int operator&(int)
explain int operator<=>(const S&, const S&)
explain int operator[](int)
explain int operator[](int, int)
explain static void operator delete( void *p )
explain static void operator()(int, int)
explain static void* operator new( std::size_t )
explain std::partial_ordering operator<=>(const S&, const S&)
explain std::strong_ordering operator<=>(const S&, const S&)
explain std::weak_ordering operator<=>(const S&, const S&)
explain virtual S& operator*(S&) = 0
explain virtual S& operator+(S&) = 0
explain virtual S& operator++(int) = 0
explain virtual S& operator-(S&) = 0
explain virtual S& operator--(int) = 0
explain virtual S* operator&(S&) = 0
explain void S::operator delete(void *p)
explain void S::operator delete[](void *p)
explain void operator delete( void *p )
explain void operator delete[]( void *p )
explain void operator()()
explain void operator()(int)
explain void operator()(int, int)
explain void operator()(int, int, int)
explain void* S::operator new(std::size_t n)
explain void* S::operator new[](std::size_t n)
explain void* operator new(size_t, S&&)
explain void* operator new(std::size_t n)
explain void* operator new[](std::size_t n)
explain ~S() = delete
END
